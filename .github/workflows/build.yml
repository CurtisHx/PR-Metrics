# Copyright (c) Microsoft Corporation.
# Licensed under the MIT License.

name: Build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch: null

defaults:
  run:
    shell: pwsh

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        task: [PRMetrics]
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 15.x

      - name: Install Root NPM Dependencies
        run: npm install

      - name: Install NPM Dependencies
        run: npm install
        working-directory: ${{ github.workspace }}/PipelinesTasks/${{ matrix.task }}/buildAndReleaseTask

      - name: Build
        run: npm run build
        working-directory: ${{ github.workspace }}/PipelinesTasks/${{ matrix.task }}/buildAndReleaseTask

      - name: Test
        run: npm run test:pipeline
        working-directory: ${{ github.workspace }}/PipelinesTasks/${{ matrix.task }}/buildAndReleaseTask

      - name: Remove 'node_modules'
        run: Remove-Item -Path 'node_modules' -Recurse -Force
        working-directory: ${{ github.workspace }}/PipelinesTasks/${{ matrix.task }}/buildAndReleaseTask

      - name: Install Production NPM Dependencies
        run: npm install --only=production
        working-directory: ${{ github.workspace }}/PipelinesTasks/${{ matrix.task }}/buildAndReleaseTask

      - name: Remove '.nyc_output'
        run: Remove-Item -Path '.nyc_output' -Recurse -Force
        working-directory: ${{ github.workspace }}/PipelinesTasks/${{ matrix.task }}/buildAndReleaseTask

      - name: Remove '.taskkey'
        run: Remove-Item -Path '.taskkey' -Recurse -Force
        working-directory: ${{ github.workspace }}/PipelinesTasks/${{ matrix.task }}/buildAndReleaseTask

      - name: Remove 'tests'
        run: Remove-Item -Path 'tests' -Recurse
        working-directory: ${{ github.workspace }}/PipelinesTasks/${{ matrix.task }}/buildAndReleaseTask

      - name: Remove 'tsdocs'
        run: Remove-Item -Path 'tsdocs' -Recurse -Force
        working-directory: ${{ github.workspace }}/PipelinesTasks/${{ matrix.task }}/buildAndReleaseTask

      - name: Remove '*.js.map'
        run: Get-ChildItem -Path '*' -Include '*.js.map' -Recurse | Remove-Item -Force
        working-directory: ${{ github.workspace }}/PipelinesTasks/${{ matrix.task }}/buildAndReleaseTask

      - name: Remove '*.json'
        run: Remove-Item -Path '*.json' -Exclude 'task*.json' -Force
        working-directory: ${{ github.workspace }}/PipelinesTasks/${{ matrix.task }}/buildAndReleaseTask

      - name: Remove '*.ts'
        run: Get-ChildItem -Path '*' -Include '*.ts' -Recurse | Remove-Item -Force
        working-directory: ${{ github.workspace }}/PipelinesTasks/${{ matrix.task }}/buildAndReleaseTask

      - name: Copy to Destination
        run: Copy-Item -Path '${{ github.workspace }}/PipelinesTasks/${{ matrix.task }}' -Destination '${{ github.workspace }}/build/Release/PipelinesTasks/${{ matrix.task }}' -Recurse

      - name: Copy 'LICENSE.txt'
        run: Copy-Item -Path '${{ github.workspace }}/LICENSE.txt' -Destination '${{ github.workspace }}/build/Release/PipelinesTasks/${{ matrix.task }}'

      - name: Install TFX CLI
        run: npm install -g tfx-cli

      - name: Create Release
        run: tfx extension create --manifest-globs vss-extension.json --output-path ms-omex.${{ matrix.task }}.vsix
        working-directory: ${{ github.workspace }}/build/Release/PipelinesTasks/${{ matrix.task }}

      - name: Upload VSIX
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.task }}
          path: '**/*.vsix'

  validate:
    name: Validate
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Super Linter
        uses: github/super-linter@v3.15.5
        env:
          EDITORCONFIG_FILE_NAME: ../../.editorconfig
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          MARKDOWN_CONFIG_FILE: ../../.markdownlint.json
          TYPESCRIPT_ES_CONFIG_FILE: ../../.eslintrc.yml

      - name: Validate Markdown Links
        uses: gaurav-nelson/github-action-markdown-link-check@v1
        with:
          config-file: .github/linters/markdown-link-check.json

      - name: Validate .markdownlint.json
        uses: Zingabopp/JsonValidate-Action@v1
        with:
          json-file: .markdownlint.json
          json-schema: https://raw.githubusercontent.com/DavidAnson/markdownlint/main/schema/markdownlint-config-schema.json

      - name: Validate package.json
        uses: Zingabopp/JsonValidate-Action@v1
        with:
          json-file: package.json
          json-schema: https://json.schemastore.org/package.json
          use-draft: draft-04

      - name: Security Scan – Validate
        uses: ShiftLeftSecurity/scan-action@v1.3.0
        env:
          ENABLE_OSS_RISK: true
        with:
          type: credscan,depscan

      - name: Security Scan – Upload Report
        uses: github/codeql-action/upload-sarif@v1
        with:
          sarif_file: reports

  validate-task:
    name: Validate – Task
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        task: [PRMetrics]
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Validate vss-extension.json
        uses: Zingabopp/JsonValidate-Action@v1
        with:
          json-file: PipelinesTasks/${{ matrix.task }}/vss-extension.json
          json-schema: https://json.schemastore.org/vss-extension.json

      - name: Validate .mocharc.json
        uses: Zingabopp/JsonValidate-Action@v1
        with:
          json-file: PipelinesTasks/${{ matrix.task }}/buildAndReleaseTask/.mocharc.json
          json-schema: https://json.schemastore.org/mocharc.json

      - name: Validate package.json
        uses: Zingabopp/JsonValidate-Action@v1
        with:
          json-file: PipelinesTasks/${{ matrix.task }}/buildAndReleaseTask/package.json
          json-schema: https://json.schemastore.org/package.json

      - name: Validate task.json
        uses: Zingabopp/JsonValidate-Action@v1
        with:
          json-file: PipelinesTasks/${{ matrix.task }}/buildAndReleaseTask/task.json
          json-schema: https://raw.githubusercontent.com/microsoft/azure-pipelines-task-lib/master/tasks.schema.json

      - name: Validate task.loc.json
        uses: Zingabopp/JsonValidate-Action@v1
        with:
          json-file: PipelinesTasks/${{ matrix.task }}/buildAndReleaseTask/task.loc.json
          json-schema: tasks.schema.json

      - name: Validate tsconfig.json
        uses: Zingabopp/JsonValidate-Action@v1
        with:
          json-file: PipelinesTasks/${{ matrix.task }}/buildAndReleaseTask/tsconfig.json
          json-schema: https://json.schemastore.org/tsconfig.json

      - name: Validate typedoc.json
        uses: Zingabopp/JsonValidate-Action@v1
        with:
          json-file: PipelinesTasks/${{ matrix.task }}/buildAndReleaseTask/typedoc.json
          json-schema: https://typedoc.org/schema.json

      - name: Validate en-US/resources.resjson
        uses: Zingabopp/JsonValidate-Action@v1
        with:
          json-file: PipelinesTasks/${{ matrix.task }}/buildAndReleaseTask/Strings/resources.resjson/en-US/resources.resjson
          json-schema: https://json.schemastore.org/resjson.json
